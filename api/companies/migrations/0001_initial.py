# Generated by Django 4.2.7 on 2025-10-19 16:25

import companies.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Official company name",
                        max_length=200,
                        unique=True,
                        verbose_name="company name",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL-friendly company identifier",
                        max_length=200,
                        unique=True,
                        verbose_name="slug",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Company overview and description",
                        verbose_name="company description",
                    ),
                ),
                (
                    "tagline",
                    models.CharField(
                        blank=True,
                        help_text="Short company tagline or mission statement",
                        max_length=200,
                        verbose_name="tagline",
                    ),
                ),
                (
                    "industry",
                    models.CharField(
                        help_text="Primary industry or sector",
                        max_length=100,
                        verbose_name="industry",
                    ),
                ),
                (
                    "company_size",
                    models.CharField(
                        choices=[
                            ("startup", "Startup (1-10 employees)"),
                            ("small", "Small (11-50 employees)"),
                            ("medium", "Medium (51-200 employees)"),
                            ("large", "Large (201-1000 employees)"),
                            ("enterprise", "Enterprise (1000+ employees)"),
                        ],
                        help_text="Number of employees",
                        max_length=50,
                        verbose_name="company size",
                    ),
                ),
                (
                    "company_type",
                    models.CharField(
                        choices=[
                            ("public", "Public Company"),
                            ("private", "Private Company"),
                            ("nonprofit", "Non-Profit"),
                            ("government", "Government"),
                            ("startup", "Startup"),
                            ("agency", "Agency"),
                            ("consultancy", "Consultancy"),
                        ],
                        help_text="Type of organization",
                        max_length=50,
                        verbose_name="company type",
                    ),
                ),
                (
                    "founded_year",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Year the company was founded",
                        null=True,
                        verbose_name="founded year",
                    ),
                ),
                (
                    "headquarters",
                    models.CharField(
                        help_text="Main headquarters location",
                        max_length=200,
                        verbose_name="headquarters",
                    ),
                ),
                (
                    "locations",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of office locations",
                        verbose_name="office locations",
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        help_text="Company website URL",
                        validators=[django.core.validators.URLValidator()],
                        verbose_name="website",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="General contact email",
                        max_length=254,
                        verbose_name="contact email",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        help_text="Contact phone number",
                        max_length=20,
                        verbose_name="phone number",
                    ),
                ),
                (
                    "linkedin_url",
                    models.URLField(
                        blank=True,
                        help_text="Company LinkedIn profile",
                        verbose_name="LinkedIn URL",
                    ),
                ),
                (
                    "twitter_url",
                    models.URLField(
                        blank=True,
                        help_text="Company Twitter profile",
                        verbose_name="Twitter URL",
                    ),
                ),
                (
                    "github_url",
                    models.URLField(
                        blank=True,
                        help_text="Company GitHub organization",
                        verbose_name="GitHub URL",
                    ),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        help_text="Company logo image",
                        null=True,
                        upload_to=companies.models.company_logo_upload_path,
                        verbose_name="company logo",
                    ),
                ),
                (
                    "cover_image",
                    models.ImageField(
                        blank=True,
                        help_text="Company cover/banner image",
                        null=True,
                        upload_to=companies.models.company_logo_upload_path,
                        verbose_name="cover image",
                    ),
                ),
                (
                    "culture_description",
                    models.TextField(
                        blank=True,
                        help_text="Description of company culture and values",
                        verbose_name="company culture",
                    ),
                ),
                (
                    "benefits",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of employee benefits and perks",
                        verbose_name="benefits",
                    ),
                ),
                (
                    "tech_stack",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Technologies and tools used by the company",
                        verbose_name="technology stack",
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the company profile is verified",
                        verbose_name="verified",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether the company is actively posting jobs",
                        verbose_name="active",
                    ),
                ),
                (
                    "is_hiring",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the company is actively hiring",
                        verbose_name="currently hiring",
                    ),
                ),
                (
                    "meta_description",
                    models.CharField(
                        blank=True,
                        help_text="SEO meta description",
                        max_length=160,
                        verbose_name="meta description",
                    ),
                ),
                (
                    "meta_keywords",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="SEO keywords",
                        verbose_name="meta keywords",
                    ),
                ),
                (
                    "view_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of profile views",
                        verbose_name="view count",
                    ),
                ),
                (
                    "follower_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Cached follower count for performance",
                        verbose_name="follower count",
                    ),
                ),
                (
                    "job_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of active job postings",
                        verbose_name="active job count",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
            ],
            options={
                "verbose_name": "Company",
                "verbose_name_plural": "Companies",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="CompanyFollow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "followed_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When the user started following this company",
                        verbose_name="followed at",
                    ),
                ),
                (
                    "notifications_enabled",
                    models.BooleanField(
                        default=True,
                        help_text="Whether to receive notifications about this company",
                        verbose_name="notifications enabled",
                    ),
                ),
                (
                    "last_interaction",
                    models.DateTimeField(
                        blank=True,
                        help_text="Last time user interacted with company content",
                        null=True,
                        verbose_name="last interaction",
                    ),
                ),
                (
                    "interaction_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of interactions with company content",
                        verbose_name="interaction count",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="company_follows",
                        to="companies.company",
                        verbose_name="company",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="company_follows",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "Company Follow",
                "verbose_name_plural": "Company Follows",
                "ordering": ["-followed_at"],
            },
        ),
        migrations.AddField(
            model_name="company",
            name="followers",
            field=models.ManyToManyField(
                blank=True,
                help_text="Users following this company",
                related_name="followed_companies",
                through="companies.CompanyFollow",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="CompanyInsight",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "insight_type",
                    models.CharField(
                        choices=[
                            ("growth", "Growth Metrics"),
                            ("hiring", "Hiring Trends"),
                            ("culture", "Culture Score"),
                            ("salary", "Salary Information"),
                            ("reviews", "Employee Reviews"),
                            ("news", "Company News"),
                        ],
                        help_text="Type of insight data",
                        max_length=50,
                        verbose_name="insight type",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Title or summary of the insight",
                        max_length=200,
                        verbose_name="insight title",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Detailed description of the insight",
                        verbose_name="description",
                    ),
                ),
                (
                    "data",
                    models.JSONField(
                        default=dict,
                        help_text="Structured insight data",
                        verbose_name="insight data",
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        blank=True,
                        help_text="Source of the insight data",
                        max_length=100,
                        verbose_name="data source",
                    ),
                ),
                (
                    "confidence_score",
                    models.FloatField(
                        default=0.0,
                        help_text="Confidence score for the insight (0.0-1.0)",
                        verbose_name="confidence score",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this insight is publicly visible",
                        verbose_name="public insight",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this insight expires (optional)",
                        null=True,
                        verbose_name="expires at",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="insights",
                        to="companies.company",
                        verbose_name="company",
                    ),
                ),
            ],
            options={
                "verbose_name": "Company Insight",
                "verbose_name_plural": "Company Insights",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["company", "insight_type"],
                        name="companies_c_company_d4e866_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="companies_c_created_6bdd89_idx"
                    ),
                    models.Index(
                        fields=["is_public"], name="companies_c_is_publ_1660c3_idx"
                    ),
                    models.Index(
                        fields=["expires_at"], name="companies_c_expires_d3d65f_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="companyfollow",
            index=models.Index(
                fields=["user", "followed_at"], name="companies_c_user_id_4f4ad9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="companyfollow",
            index=models.Index(
                fields=["company", "followed_at"], name="companies_c_company_fb26f6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="companyfollow",
            index=models.Index(
                fields=["notifications_enabled"], name="companies_c_notific_5fbb6d_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="companyfollow",
            unique_together={("user", "company")},
        ),
        migrations.AddIndex(
            model_name="company",
            index=models.Index(fields=["name"], name="companies_c_name_2d8260_idx"),
        ),
        migrations.AddIndex(
            model_name="company",
            index=models.Index(fields=["slug"], name="companies_c_slug_45751b_idx"),
        ),
        migrations.AddIndex(
            model_name="company",
            index=models.Index(
                fields=["industry"], name="companies_c_industr_6efa2c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="company",
            index=models.Index(
                fields=["company_size"], name="companies_c_company_159ddc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="company",
            index=models.Index(
                fields=["headquarters"], name="companies_c_headqua_c3c83c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="company",
            index=models.Index(
                fields=["is_active", "is_hiring"], name="companies_c_is_acti_4168e1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="company",
            index=models.Index(
                fields=["created_at"], name="companies_c_created_301a54_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="company",
            index=models.Index(
                fields=["follower_count"], name="companies_c_followe_0bd588_idx"
            ),
        ),
    ]
