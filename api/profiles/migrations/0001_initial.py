# Generated by Django 4.2.7 on 2025-10-19 10:44

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import profiles.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "headline",
                    models.CharField(
                        blank=True,
                        help_text='Brief professional headline (e.g., "Senior Software Engineer")',
                        max_length=200,
                        verbose_name="professional headline",
                    ),
                ),
                (
                    "summary",
                    models.TextField(
                        blank=True,
                        help_text="Professional summary or bio",
                        verbose_name="professional summary",
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        help_text="Current location (city, country)",
                        max_length=100,
                        verbose_name="location",
                    ),
                ),
                (
                    "industry",
                    models.CharField(
                        blank=True,
                        help_text="Primary industry or field",
                        max_length=100,
                        verbose_name="industry",
                    ),
                ),
                (
                    "experience_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("entry", "Entry Level (0-2 years)"),
                            ("junior", "Junior (2-4 years)"),
                            ("mid", "Mid Level (4-7 years)"),
                            ("senior", "Senior (7-10 years)"),
                            ("lead", "Lead/Principal (10+ years)"),
                            ("executive", "Executive/C-Level"),
                        ],
                        help_text="Professional experience level",
                        max_length=50,
                        verbose_name="experience level",
                    ),
                ),
                (
                    "skills",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of professional skills and technologies",
                        verbose_name="skills",
                    ),
                ),
                (
                    "cv_file",
                    models.FileField(
                        blank=True,
                        help_text="Upload your CV (PDF, DOC, DOCX, or MD format)",
                        null=True,
                        upload_to=profiles.models.cv_upload_path,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["pdf", "doc", "docx", "md"]
                            )
                        ],
                        verbose_name="CV file",
                    ),
                ),
                (
                    "cv_uploaded_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the CV was last uploaded",
                        null=True,
                        verbose_name="CV uploaded at",
                    ),
                ),
                (
                    "cv_metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Extracted metadata from CV",
                        verbose_name="CV metadata",
                    ),
                ),
                (
                    "portfolio_url",
                    models.URLField(
                        blank=True,
                        help_text="Generated portfolio website URL",
                        verbose_name="portfolio URL",
                    ),
                ),
                (
                    "portfolio_settings",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Portfolio customization settings",
                        verbose_name="portfolio settings",
                    ),
                ),
                (
                    "preferences",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="User preferences and settings",
                        verbose_name="user preferences",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=True,
                        help_text="Whether the profile is publicly visible",
                        verbose_name="public profile",
                    ),
                ),
                (
                    "show_email",
                    models.BooleanField(
                        default=False,
                        help_text="Whether to show email address on public profile",
                        verbose_name="show email",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "Profile",
                "verbose_name_plural": "Profiles",
                "ordering": ["-updated_at"],
            },
        ),
    ]
