apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: koroh-platform
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      initContainers:
      - name: migrate
        image: koroh/api:latest
        command: ["python", "manage.py", "migrate"]
        envFrom:
        - configMapRef:
            name: koroh-config
        - secretRef:
            name: koroh-secrets
        volumeMounts:
        - name: static-volume
          mountPath: /app/staticfiles
        - name: media-volume
          mountPath: /app/media
      - name: collectstatic
        image: koroh/api:latest
        command: ["python", "manage.py", "collectstatic", "--noinput"]
        envFrom:
        - configMapRef:
            name: koroh-config
        - secretRef:
            name: koroh-secrets
        volumeMounts:
        - name: static-volume
          mountPath: /app/staticfiles
      containers:
      - name: api
        image: koroh/api:latest
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: koroh-config
        - secretRef:
            name: koroh-secrets
        volumeMounts:
        - name: static-volume
          mountPath: /app/staticfiles
        - name: media-volume
          mountPath: /app/media
        - name: logs-volume
          mountPath: /app/logs
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/v1/health/
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/v1/ready/
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        env:
        - name: PROMETHEUS_MULTIPROC_DIR
          value: "/tmp/prometheus_multiproc_dir"
      volumes:
      - name: static-volume
        persistentVolumeClaim:
          claimName: static-pvc
      - name: media-volume
        persistentVolumeClaim:
          claimName: media-pvc
      - name: logs-volume
        persistentVolumeClaim:
          claimName: logs-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: koroh-platform
spec:
  selector:
    app: api
  ports:
  - port: 8000
    targetPort: 8000
  type: ClusterIP

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-hpa
  namespace: koroh-platform
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: static-pvc
  namespace: koroh-platform
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-pvc
  namespace: koroh-platform
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: logs-pvc
  namespace: koroh-platform
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard